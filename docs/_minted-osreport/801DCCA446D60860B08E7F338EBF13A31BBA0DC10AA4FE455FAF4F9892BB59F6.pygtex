\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}sys/types.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}sys/wait.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}stdio.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}unistd.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}stdlib.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}string.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}signal.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}proc\PYGZus{}manager.h\PYGZdq{}}

\PYG{k+kt}{pid\PYGZus{}t} \PYG{n}{current\PYGZus{}pid}\PYG{p}{;}
\PYG{k+kt}{int} \PYG{n}{status}\PYG{p}{;}

\PYG{k+kt}{void} \PYG{n+nf}{externalCommand}\PYG{p}{(}\PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{command}\PYG{p}{,} \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{varargs}\PYG{p}{)\PYGZob{}}
  \PYG{k+kt}{char} \PYG{o}{**}\PYG{n}{args} \PYG{o}{=} \PYG{p}{(}\PYG{k+kt}{char}\PYG{o}{**}\PYG{p}{)} \PYG{n}{calloc}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{l+m+mi}{80}\PYG{p}{);} \PYG{c+c1}{// Array of arguments}
  \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{arg}\PYG{p}{;} \PYG{c+c1}{// Individual argument used to add to array}

  \PYG{k+kt}{int} \PYG{n}{argc} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;} \PYG{c+c1}{// Counts how many arguments are present}
  \PYG{k+kt}{char} \PYG{n}{arg\PYGZus{}delimiter}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{=} \PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{p}{;} \PYG{c+c1}{// To delimit the varargs}

  \PYG{k+kt}{int} \PYG{n}{BG} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{c+c1}{// Runs process in background or foreground}

  \PYG{k+kt}{char} \PYG{o}{**}\PYG{n}{envp} \PYG{o}{=} \PYG{n}{environEGG}\PYG{p}{();} \PYG{c+c1}{// Retrieves env variables from eggshell}

  \PYG{k+kt}{pid\PYGZus{}t} \PYG{n}{pid} \PYG{o}{=} \PYG{n}{fork}\PYG{p}{();}

  \PYG{c+c1}{// Splits the path variable into an array of paths and stores them in \PYGZsq{}paths\PYGZsq{}}
  \PYG{k+kt}{int} \PYG{n}{pathn}\PYG{p}{;}
  \PYG{k+kt}{char} \PYG{o}{**}\PYG{n}{paths} \PYG{o}{=} \PYG{n}{pathsToCommArr}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{pathn}\PYG{p}{,} \PYG{n}{command}\PYG{p}{);}

  \PYG{c+c1}{// Loop for storing varargs into **args}
  \PYG{k}{while}\PYG{p}{(}\PYG{n}{varargs} \PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
    \PYG{n}{args}\PYG{p}{[}\PYG{n}{argc}\PYG{p}{]} \PYG{o}{=} \PYG{p}{(}\PYG{k+kt}{char}\PYG{o}{*}\PYG{p}{)} \PYG{n}{malloc}\PYG{p}{(}\PYG{l+m+mi}{80}\PYG{p}{);}
    \PYG{n}{arg} \PYG{o}{=} \PYG{n}{strsep}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{varargs}\PYG{p}{,} \PYG{n}{arg\PYGZus{}delimiter}\PYG{p}{);}

    \PYG{k}{if}\PYG{p}{(}\PYG{n}{strcmp}\PYG{p}{(}\PYG{n}{arg}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}\PYGZam{}\PYGZdq{}}\PYG{p}{)} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
      \PYG{n}{BG} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{else}\PYG{p}{\PYGZob{}}
      \PYG{n}{strcpy}\PYG{p}{(}\PYG{n}{args}\PYG{p}{[}\PYG{n}{argc}\PYG{p}{],} \PYG{n}{arg}\PYG{p}{);}
      \PYG{n}{argc}\PYG{o}{++}\PYG{p}{;}
      \PYG{n}{args} \PYG{o}{=} \PYG{n}{realloc}\PYG{p}{(}\PYG{n}{args}\PYG{p}{,} \PYG{p}{(}\PYG{n}{argc}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{o}{*} \PYG{l+m+mi}{80}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}

  \PYG{k+kt}{int} \PYG{n}{success} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}

  \PYG{c+c1}{// Conditional block for fork\PYGZhy{}exec pattern}
  \PYG{k}{if}\PYG{p}{(}\PYG{n}{pid} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}} \PYG{c+c1}{// Child}

    \PYG{c+c1}{// For loop for using all paths}
    \PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{pathn}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
      \PYG{n}{args}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{=} \PYG{n}{paths}\PYG{p}{[}\PYG{n}{i}\PYG{p}{];}

      \PYG{c+c1}{// Executes command path[i] with arguments args with environment envp}
      \PYG{n}{success} \PYG{o}{=} \PYG{n}{execve}\PYG{p}{(}\PYG{n}{paths}\PYG{p}{[}\PYG{n}{i}\PYG{p}{],} \PYG{n}{args}\PYG{p}{,} \PYG{n}{envp}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{n}{perror}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}execve\PYGZdq{}}\PYG{p}{);}
    \PYG{n}{\PYGZus{}exit}\PYG{p}{(}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}
  \PYG{k}{else} \PYG{k}{if}\PYG{p}{(}\PYG{n}{pid} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}} \PYG{c+c1}{//Parent}
    \PYG{n}{current\PYGZus{}pid} \PYG{o}{=} \PYG{n}{pid}\PYG{p}{;}

    \PYG{k}{if}\PYG{p}{(}\PYG{n}{setpgid}\PYG{p}{(}\PYG{n}{pid}\PYG{p}{,} \PYG{n}{pid}\PYG{p}{)} \PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{n}{perror}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}setpid\PYGZdq{}}\PYG{p}{);}

    \PYG{c+c1}{// Waits if background flag not activated.}
    \PYG{k}{if}\PYG{p}{(}\PYG{n}{BG} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
      \PYG{c+c1}{// WUNTRACED used to stop waiting when suspended}
      \PYG{n}{waitpid}\PYG{p}{(}\PYG{n}{current\PYGZus{}pid}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{status}\PYG{p}{,} \PYG{n}{WUNTRACED}\PYG{p}{);}

        \PYG{k}{if}\PYG{p}{(}\PYG{n}{WIFEXITED}\PYG{p}{(}\PYG{n}{status}\PYG{p}{))\PYGZob{}}
          \PYG{n}{setExitcode}\PYG{p}{(}\PYG{n}{WEXITSTATUS}\PYG{p}{(}\PYG{n}{status}\PYG{p}{));}
        \PYG{p}{\PYGZcb{}}
        \PYG{k}{else} \PYG{k}{if}\PYG{p}{(}\PYG{n}{WIFSIGNALED}\PYG{p}{(}\PYG{n}{status}\PYG{p}{))\PYGZob{}}
          \PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Process received SIGNAL \PYGZpc{}d}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{WTERMSIG}\PYG{p}{(}\PYG{n}{status}\PYG{p}{));}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}
  \PYG{k}{else}\PYG{p}{\PYGZob{}}
    \PYG{n}{perror}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}fork()\PYGZdq{}}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}

  \PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{argc}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
    \PYG{n}{free}\PYG{p}{(}\PYG{n}{args}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]);}
  \PYG{p}{\PYGZcb{}}
  \PYG{n}{free}\PYG{p}{(}\PYG{n}{args}\PYG{p}{);}

  \PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{pathn}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
    \PYG{n}{free}\PYG{p}{(}\PYG{n}{paths}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]);}
  \PYG{p}{\PYGZcb{}}
  \PYG{n}{free}\PYG{p}{(}\PYG{n}{paths}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{char}\PYG{o}{**} \PYG{n+nf}{pathsToCommArr}\PYG{p}{(}\PYG{k+kt}{int} \PYG{o}{*}\PYG{n}{pathn}\PYG{p}{,} \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{program}\PYG{p}{)\PYGZob{}}
  \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{pathORIG} \PYG{o}{=} \PYG{n}{value}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}PATH\PYGZdq{}}\PYG{p}{);} \PYG{c+c1}{// stores \PYGZdl{}PATH string}

  \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{paths} \PYG{o}{=} \PYG{n}{malloc}\PYG{p}{(}\PYG{n}{strlen}\PYG{p}{(}\PYG{n}{pathORIG}\PYG{p}{)}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{);}
\PYG{k+kt}{void} \PYG{o}{*}\PYG{n}{tofree} \PYG{o}{=} \PYG{n}{paths}\PYG{p}{;}

\PYG{n}{strcpy}\PYG{p}{(}\PYG{n}{paths}\PYG{p}{,} \PYG{n}{pathORIG}\PYG{p}{);} \PYG{c+c1}{// Done to keep original paths intact}

\PYG{k+kt}{char} \PYG{o}{**}\PYG{n}{patharr} \PYG{o}{=} \PYG{p}{(}\PYG{k+kt}{char}\PYG{o}{**}\PYG{p}{)} \PYG{n}{calloc}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{l+m+mi}{100}\PYG{p}{);}
\PYG{k+kt}{char} \PYG{n}{delimiter}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{]} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}:\PYGZdq{}}\PYG{p}{;}

\PYG{k+kt}{int} \PYG{n}{pathnL} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{c+c1}{// used for path indexing}

\PYG{k}{while}\PYG{p}{(}\PYG{n}{paths}\PYG{o}{!=}\PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
  \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{path} \PYG{o}{=} \PYG{n}{strsep}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{paths}\PYG{p}{,} \PYG{n}{delimiter}\PYG{p}{);}
  \PYG{n}{patharr}\PYG{p}{[}\PYG{n}{pathnL}\PYG{p}{]} \PYG{o}{=} \PYG{p}{(}\PYG{k+kt}{char}\PYG{o}{*}\PYG{p}{)} \PYG{n}{malloc}\PYG{p}{(}\PYG{l+m+mi}{100}\PYG{p}{);}
  \PYG{n}{strcpy}\PYG{p}{(}\PYG{n}{patharr}\PYG{p}{[}\PYG{n}{pathnL}\PYG{p}{],} \PYG{n}{path}\PYG{p}{);}

  \PYG{c+c1}{// Appends program to be run to the individual PATH}
  \PYG{n}{strcat}\PYG{p}{(}\PYG{n}{patharr}\PYG{p}{[}\PYG{n}{pathnL}\PYG{p}{],} \PYG{l+s}{\PYGZdq{}/\PYGZdq{}}\PYG{p}{);}
  \PYG{n}{strcat}\PYG{p}{(}\PYG{n}{patharr}\PYG{p}{[}\PYG{n}{pathnL}\PYG{p}{],} \PYG{n}{program}\PYG{p}{);}

    \PYG{n}{patharr} \PYG{o}{=} \PYG{p}{(}\PYG{k+kt}{char}\PYG{o}{**}\PYG{p}{)} \PYG{n}{realloc}\PYG{p}{(}\PYG{n}{patharr}\PYG{p}{,} \PYG{o}{++}\PYG{n}{pathnL} \PYG{o}{*} \PYG{l+m+mi}{100}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}

  \PYG{n}{free}\PYG{p}{(}\PYG{n}{tofree}\PYG{p}{);}

  \PYG{o}{*}\PYG{n}{pathn} \PYG{o}{=} \PYG{n}{pathnL}\PYG{p}{;} \PYG{c+c1}{// stores length of path to pathn pointer}

  \PYG{k}{return} \PYG{n}{patharr}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{pid\PYGZus{}t} \PYG{n+nf}{currentpid}\PYG{p}{()\PYGZob{}}
  \PYG{k}{return} \PYG{n}{current\PYGZus{}pid}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{int} \PYG{n+nf}{resumeProcess}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{state}\PYG{p}{,} \PYG{k+kt}{pid\PYGZus{}t} \PYG{n}{process}\PYG{p}{)\PYGZob{}}
  \PYG{n}{resuspended} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}

  \PYG{c+c1}{// Sends SIGCONT signal to suspended process}
  \PYG{k+kt}{int} \PYG{n}{wakestatus} \PYG{o}{=} \PYG{n}{kill}\PYG{p}{(}\PYG{n}{process}\PYG{p}{,} \PYG{n}{SIGCONT}\PYG{p}{);}

  \PYG{c+c1}{// If signal failed \PYGZhy{} abort function}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{wakestatus} \PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
    \PYG{n}{perror}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Failed to resume process\PYGZdq{}}\PYG{p}{);} 
    \PYG{k}{return} \PYG{l+m+mi}{1}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}

  \PYG{n}{current\PYGZus{}pid} \PYG{o}{=} \PYG{n}{process}\PYG{p}{;}

  \PYG{k}{if}\PYG{p}{(}\PYG{n}{state} \PYG{o}{==} \PYG{n}{FOREGROUND}\PYG{p}{)\PYGZob{}}
    \PYG{n}{waitpid}\PYG{p}{(}\PYG{n}{current\PYGZus{}pid}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{status}\PYG{p}{,} \PYG{n}{WUNTRACED}\PYG{p}{);}

    \PYG{k}{if}\PYG{p}{(}\PYG{n}{WIFEXITED}\PYG{p}{(}\PYG{n}{status}\PYG{p}{))\PYGZob{}}
      \PYG{n}{setExitcode}\PYG{p}{(}\PYG{n}{WEXITSTATUS}\PYG{p}{(}\PYG{n}{status}\PYG{p}{));}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{else} \PYG{k}{if}\PYG{p}{(}\PYG{n}{WIFSIGNALED}\PYG{p}{(}\PYG{n}{status}\PYG{p}{))\PYGZob{}}
      \PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Process received SIGNAL \PYGZpc{}d}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{WTERMSIG}\PYG{p}{(}\PYG{n}{status}\PYG{p}{));}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}

  \PYG{k}{if}\PYG{p}{(}\PYG{n}{resuspended} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
    \PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}
  \PYG{k}{else}\PYG{p}{\PYGZob{}}
    \PYG{k}{return} \PYG{l+m+mi}{18}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
